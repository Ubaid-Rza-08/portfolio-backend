spring.application.name=backend

# PostgreSQL Database Configuration
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/neondb}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Cloudinary Configuration
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# PostgreSQL specific settings
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.resolve-lazily=true

# Server Configuration
server.port=${SERVER_PORT:8080}
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Logging Configuration
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.example.backend.service.CloudinaryService=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Jackson Configuration for JSON processing
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Cache Configuration
spring.cache.type=simple

# Security Configuration (if needed)
spring.security.require-ssl=false

# Application specific configurations
app.image.max-size=2MB
app.image.max-width=1920
app.image.max-height=1920
app.image.compression-quality=0.9

# CORS Configuration
app.cors.allowed-origins=*
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*

# Email Configuration (if needed for notifications)
# spring.mail.host=smtp.gmail.com
# spring.mail.port=587
# spring.mail.username=${EMAIL_USERNAME}
# spring.mail.password=${EMAIL_PASSWORD}
# spring.mail.properties.mail.smtp.auth=true
# spring.mail.properties.mail.smtp.starttls.enable=true

# JWT Configuration (if implementing authentication)
# jwt.secret=${JWT_SECRET}
# jwt.expiration=86400

# API Documentation
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized